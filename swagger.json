{
  "openapi": "3.0.0",
  "info": {
    "version": "2.0.0",
    "title": "Swagger doc",
    "description": "Documentation for server requests and responses",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json", "multipart/form-data"],
  "servers": [{ "url": "http://localhost:3000" }],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Notices",
      "description": "Notices endpoints"
    },
    {
      "name": "Pets",
      "description": "Pets endpoints"
    },
    {
      "name": "User + Pets",
      "description": "User + Pets endpoints"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "Create a new user",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)"
          },
          "409": {
            "description": "Email in use"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "Login user",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Login's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)"
          },
          "401": {
            "description": "Email or password is wrong"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "Logout user",
        "parameters": [
          {
            "name": "Authorization",
            "required": "true",
            "schema": {
              "type": "string",
              "format": "bearer"
            },
            "description": "The token issued to the current user."
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "401": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/auth/current": {
      "get": {
        "tags": ["Auth"],
        "summary": "Get information about the current user",
        "parameters": [
          {
            "name": "Authorization",
            "required": "true",
            "schema": {
              "type": "string",
              "format": "bearer"
            },
            "description": "The token issued to the current user."
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/auth/profile": {
      "patch": {
        "tags": ["Auth"],
        "summary": "Updates information about the current user",
        "parameters": [
          {
            "name": "Authorization",
            "required": "true",
            "schema": {
              "type": "string",
              "format": "bearer"
            },
            "description": "The token issued to the current user."
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "409": {
            "description": "Email in use"
          }
        }
      }
    }
  },

  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Mykola"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "user@example.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "user@example.com"
          }
        },
        "example": {
          "email": "user@example.com"
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "user@example.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "user@example.com"
          }
        },
        "example": {
          "email": "user@example.com"
        }
      },
      "CurrentResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "User"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "user@example.com"
          },
          "phone": {
            "type": "string",
            "description": "User's phone",
            "example": "380991122333"
          },
          "birthday": {
            "type": "string",
            "description": "User's birthday",
            "example": "01.02.1999"
          },
          "city": {
            "type": "string",
            "description": "User's city",
            "example": "Sumy"
          }
        },
        "example": {
          "name": "Zhenya",
          "email": "user@example.com",
          "phone": "+380991122333",
          "birthday": "01.02.1999",
          "city": "Sumy"
        }
      }
    }
  },
  "securitySchemes": {
    "Bearer": {
      "type": "http",
      "scheme": "bearer",
      "bearerFormat": "JWT"
    }
  }
}
