{
  "openapi": "3.0.0",
  "info": {
    "version": "2.0.0",
    "title": "Swagger doc",
    "description": "Documentation for server requests and responses",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json", "multipart/form-data"],
  "servers": [{ "url": "http://localhost:3000" }],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Notices",
      "description": "Notices endpoints"
    },
    {
      "name": "Pets",
      "description": "Pets endpoints"
    },
    {
      "name": "User + Pets",
      "description": "User + Pets endpoints"
    },
    {
      "name": "Friends",
      "description": "Our Friends endpoints"
    }
  ],
  "paths": {
    "/api/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "Create a new user",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)"
          },
          "409": {
            "description": "Email in use"
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "Login user",
        "parameters": [],
        "requestBody": {
          "description": "Login's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)"
          },
          "401": {
            "description": "Email or password is wrong"
          }
        }
      }
    },
    "/api/auth/refresh": {
      "post": {
        "tags": ["Auth"],
        "summary": "Refresh user's tokens",
        "parameters": [],
        "requestBody": {
          "description": "Refresh object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshResponse"
                }
              }
            }
          },
          "403": {
            "description": "Refresh token invalid"
          }
        }
      }
    },
    "/api/auth/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "Logout user",
        "parameters": [
          {
            "name": "Authorization",
            "required": true,
            "type": "string",
            "in": "header",
            "description": "The token issued to the current user."
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "401": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/api/auth/current": {
      "get": {
        "tags": ["Auth"],
        "summary": "Get information about the current user",
        "parameters": [
          {
            "name": "Authorization",
            "required": true,
            "type": "string",
            "in": "header",
            "description": "The token issued to the current user."
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/api/auth/profile": {
      "patch": {
        "tags": ["Auth"],
        "summary": "Updates information about the current user",
        "parameters": [
          {
            "name": "Authorization",
            "required": true,
            "type": "string",
            "in": "header",
            "description": "The token issued to the current user."
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "409": {
            "description": "Email in use"
          }
        }
      }
    },
    "/api/auth/profile/avatar": {
      "patch": {
        "tags": ["Auth"],
        "summary": "Updates avatar of the current user",
        "parameters": [
          {
            "name": "Authorization",
            "required": true,
            "type": "string",
            "in": "header",
            "description": "The token issued to the current user."
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "key": {
                    "type": "string",
                    "description": "avatar"
                  },
                  "value": {
                    "type": "file",
                    "description": "image.jpg"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AvatarResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)"
          },
          "401": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/api/pets": {
      "post": {
        "tags": ["Pets"],
        "summary": "Add a new pet",
        "parameters": [
          {
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string",
              "format": "bearer"
            },
            "description": "The usesr's token for add pet."
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Add's pet object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddPetsRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddPetsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)"
          }
        }
      },
      "get": {
        "tags": ["Pets"],
        "summary": "Get all pets",
        "parameters": [
          {
            "in": "path",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string",
              "format": "bearer"
            },
            "description": "The user's token for get all pet."
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPetsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)"
          }
        }
      }
    },
    "/api/pets/{id}": {
      "delete": {
        "tags": ["Pets"],
        "summary": "Delete pet by id",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Pet's id"
          },
          {
            "in": "path",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string",
              "format": "bearer"
            },
            "description": "The user's token for delete pet."
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeletePetResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)"
          }
        }
      }
    },
    "/api/notices/category/{category}": {
      "get": {
        "tags": ["Notices"],
        "summary": "Get all notices by search query and category",
        "parameters": [
          {
            "in": "path",
            "name": "category",
            "required": true,
            "type": "string",
            "description": "Notices category"
          },
          {
            "in": "query",
            "name": "search",
            "type": "string",
            "description": "Search word"
          },
          {
            "in": "query",
            "name": "page",
            "type": "number",
            "description": "Page number"
          },
          {
            "in": "query",
            "name": "limit",
            "type": "number",
            "description": "Number of notices per page"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllNoticesResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/notices/notice/{noticeId}": {
      "get": {
        "tags": ["Notices"],
        "summary": "Get by id notice",
        "parameters": [
          {
            "in": "path",
            "name": "noticeId",
            "required": true,
            "type": "string",
            "description": "Notice's id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetByIdNoticeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "message": "${noticeId} is not a valid id"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/notices/favorite": {
      "get": {
        "tags": ["Notices"],
        "summary": "Get favorite notices",
        "parameters": [
          {
            "name": "Authorization",
            "required": true,
            "type": "string",
            "in": "header",
            "description": "The token issued to the current user."
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFavoriteNoticesResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/notices/{noticeId}/favorite": {
      "patch": {
        "tags": ["Notices"],
        "summary": "Add notice in favorites",
        "parameters": [
          {
            "name": "Authorization",
            "required": true,
            "type": "string",
            "in": "header",
            "description": "The token issued to the current user."
          },
          {
            "in": "path",
            "name": "noticeId",
            "required": true,
            "type": "string",
            "description": "Notice's id"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddToFavoriteResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/notices/": {
      "get": {
        "tags": ["Notices"],
        "summary": "Get user's notices",
        "parameters": [
          {
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string",
              "format": "bearer"
            },
            "description": "The usesr's token for get user's notices."
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserNoticesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "message": "${noticeId} is not a valid id"
                }
              }
            }
          }
        }
      }
    },
    "/api/notices/{noticeId}/nofavorite": {
      "patch": {
        "tags": ["Notices"],
        "summary": "Remove notice from favorites",
        "parameters": [
          {
            "name": "Authorization",
            "required": true,
            "type": "string",
            "in": "header",
            "description": "The token issued to the current user."
          },
          {
            "in": "path",
            "name": "noticeId",
            "required": true,
            "type": "string",
            "description": "Notice's id"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RemoveFromFavoriteResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "message": "${noticeId} is not a valid id"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/notices": {
      "post": {
        "tags": ["Notices"],
        "summary": "Add a new notice",
        "parameters": [
          {
            "name": "Authorization",
            "required": true,
            "type": "string",
            "in": "header",
            "description": "The token issued to the current user."
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "key": {
                    "type": "string",
                    "description": "avatarURL"
                  },
                  "value": {
                    "type": "file",
                    "description": "image.jpg"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddNoticenRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetByIdNoticeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/notices/{id}": {
      "delete": {
        "tags": ["Notices"],
        "summary": "Delete user's notice by id",
        "parameters": [
          {
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string",
              "format": "bearer"
            },
            "description": "The usesr's token for delete user's notice."
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "User's notice id"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteUserNoticesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)"
          }
        }
      }
    },
    "/api/profile": {
      "get": {
        "tags": ["User + Pets"],
        "summary": "Gets information about the user and one's pets",
        "parameters": [
          {
            "name": "Authorization",
            "required": true,
            "type": "string",
            "description": "The user's token for gets information"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAndPets"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          },
          "400": {
            "description": "Bad request (invalid request body)"
          }
        }
      }
    },
    "/api/friends": {
      "get": {
        "tags": ["Friends"],
        "summary": "Gets information about all our Friends",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllFriendsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/friends/{id}": {
      "get": {
        "tags": ["Friends"],
        "summary": "Gets information about one of our Friends",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "description": "Friend's Id"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFriendsById"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)"
          }
        }
      }
    }
  },

  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Mykola"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "user@example.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "user@example.com"
          }
        },
        "example": {
          "email": "user@example.com"
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "user@example.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "user@example.com"
          }
        },
        "example": {
          "email": "user@example.com"
        }
      },
      "RefreshRequest": {
        "type": "object",
        "required": ["refreshToken"],
        "properties": {
          "refreshToken": {
            "type": "string",
            "description": "User's refresh token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0ZTRmYWE0ZDczOTdmZTBkZWY2YWZhMiIsImlhdCI6MTY5MjcyODE5OSwiZXhwIjoxNjkyNzI4MzE5fQ.pPT3WwEt9f6-0nEJ74fX9nQSAtf0pBoSuz5XhnYDxU4"
          }
        }
      },
      "RefreshResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "description": "User's access token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0ZTRmYWE0ZDczOTdmZTBkZWY2YWZhMiIsImlhdCI6MTY5MjcyODE5OSwiZXhwIjoxNjkyNzI4MzE5fQ.pPT3WwEt9f6-0nEJ74fX9nQSAtf0pBoSuz5XhnYDxU4"
          },
          "refreshToken": {
            "type": "string",
            "description": "User's refresh token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0ZTM1OTYzNGI0OWJjMDY3MjU1NDU1YSIsImlhdCI6MTY5MjYyMTE4NywiZXhwIjoxNjkyNzA3NTg3fQ.S7JkJ3xYF5AfkMIggChgSPZc3nHPA5dLTaUAUxvPiLE"
          }
        },
        "example": {
          "email": "user@example.com"
        }
      },
      "CurrentResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "User"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "user@example.com"
          },
          "phone": {
            "type": "string",
            "description": "User's phone",
            "example": "380991122333"
          },
          "birthday": {
            "type": "string",
            "description": "User's birthday",
            "example": "01.02.1999"
          },
          "city": {
            "type": "string",
            "description": "User's city",
            "example": "Sumy"
          }
        },
        "example": {
          "name": "Zhenya",
          "email": "user@example.com",
          "phone": "+380991122333",
          "birthday": "01.02.1999",
          "city": "Sumy"
        }
      },
      "AvatarResponse": {
        "type": "object",
        "properties": {
          "avatarURL": {
            "type": "string",
            "description": "User's avatar url",
            "example": "http://res.cloudinary.com/qwsdftyuio/image/upload/qwsdfghjk/qwsdfghj.jpg"
          }
        },
        "example": {
          "avatarURL": "http://res.cloudinary.com/qwsdftyuio/image/upload/qwsdfghjk/qwsdfghj.jpg"
        }
      },
      "AddPetsRequest": {
        "type": "object",
        "required": ["name", "dateOfBirth", "type", "comments", "avatarPet"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Pet's name",
            "example": "Rada"
          },
          "dateOfBirth": {
            "type": "string",
            "description": "Pet's birthday",
            "example": "12-12-2012"
          },
          "type": {
            "type": "string",
            "description": "Pets's type",
            "example": "Pomeranian"
          },
          "comments": {
            "type": "string",
            "description": "Some comments about pet",
            "example": "Beautiful and clever girl"
          },
          "avatarPet": {
            "type": "string",
            "description": "Pet's avatar url",
            "example": "http://res.cloudinary.com/qwsdftyuio/image/upload/qwsdfghjk/qwsdfghj.jpg"
          }
        }
      },
      "AddPetsResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Pet's id",
            "example": "64e10d144a3a60fc7905bf79"
          },
          "name": {
            "type": "string",
            "description": "Pet's name",
            "example": "Rada"
          },
          "dateOfBirth": {
            "type": "string",
            "description": "Pet's birthday",
            "example": "12-12-2012"
          },
          "type": {
            "type": "string",
            "description": "Pets's type",
            "example": "Pomeranian"
          },
          "comments": {
            "type": "string",
            "description": "Some comments about pet",
            "example": "Beautiful and clever girl"
          },
          "avatarPet": {
            "type": "string",
            "description": "Pet's avatar url",
            "example": "http://res.cloudinary.com/qwsdftyuio/image/upload/qwsdfghjk/qwsdfghj.jpg"
          }
        },
        "example": {
          "_id": "54e103c48f5f51dbeffcc9cb",
          "name": "Rada",
          "dateOfBirth": "12-12-2012",
          "type": "Pomeranian",
          "comments": "Beautiful and clever girl",
          "avatarPet": "http://res.cloudinary.com/qwsdftyuio/image/upload/qwsdfghjk/qwsdfghj.jpg"
        }
      },
      "GetPetsResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Pet's id",
              "example": "54e103c48f5f51dbeffcc9cb"
            },
            "name": {
              "type": "string",
              "description": "Pet's email",
              "example": "Rada"
            },
            "dateOfBirth": {
              "type": "string",
              "description": "Pet's birthday",
              "example": "12-12-2012"
            },
            "type": {
              "type": "string",
              "description": "Pets's type",
              "example": "Pomeranian"
            },
            "comments": {
              "type": "string",
              "description": "Some comments about pet",
              "example": "Beautiful and clever girl"
            },
            "avatarPet": {
              "type": "string",
              "description": "Pet's avatar url",
              "example": "http://res.cloudinary.com/qwsdftyuio/image/upload/qwsdfghjk/qwsdfghj.jpg"
            }
          }
        },
        "example": [
          {
            "id": "54e103c48f5f51dbeffcc9cb",
            "name": "Rada",
            "dateOfBirth": "12-12-2012",
            "type": "Pomeranian",
            "comments": "Beautiful and clever girl",
            "avatar": "http://res.cloudinary.com/qwsdftyuio/image/upload/qwsdfghjk/qwsdfghj.jpg"
          },
          {
            "id": "54e103c48f5f51dbeffcc9cb",
            "name": "Spike",
            "dateOfBirth": "21-12-2012",
            "type": "Pomeranian",
            "comments": "Beautiful and clever boy",
            "avatar": "http://res.cloudinary.com/qwsdftyuio/image/upload/qwsdfghjk/qwsdfghj.jpg"
          }
        ]
      },
      "DeletePetResponse": {
        "type": "object",
        "properties": {
          "message": "Delete success"
        },
        "example": {
          "message": "Delete success"
        }
      },
      "GetAllNoticesResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "description": "Notice's id",
              "example": "64e10d144a3a60fc7905bf79"
            },
            "category": {
              "type": "string",
              "description": "Notice's category",
              "example": "sell"
            },
            "title": {
              "type": "string",
              "description": "Notice's title",
              "example": "Reliable friend"
            },
            "name": {
              "type": "string",
              "description": "Pet's name",
              "example": "Nice ones"
            },
            "type": {
              "type": "string",
              "description": "Pet's type",
              "example": "German Shepherd"
            },
            "avatarURL": {
              "type": "string",
              "description": "Pet's avatar url",
              "example": "http://res.cloudinary.com/qwsdftyuio/image/upload/qwsdfghjk/qwsdfghj.jpg"
            },
            "location": {
              "type": "string",
              "description": "Pet's location",
              "example": "Sumy"
            },
            "birthday": {
              "type": "string",
              "description": "Pet's birthday",
              "example": "15-04-2015"
            },
            "sex": {
              "type": "string",
              "description": "Pet's gender",
              "example": "female"
            },
            "comment": {
              "type": "string",
              "description": "Notice's comment",
              "example": "Active dog"
            },
            "price": {
              "type": "number",
              "description": "Pet's price",
              "example": 1000
            },
            "owner": {
              "type": "string",
              "description": "User's id who created the notice",
              "example": "64e0e0bcc4d8d3a91d3aa90c"
            }
          }
        },
        "example": [
          {
            "_id": "64e10d144a3a60fc7905bf79",
            "category": "sell",
            "title": "Reliable friend",
            "name": "Nice ones",
            "type": "German Shepherd",
            "avatarURL": "http://res.cloudinary.com/qwsdftyuio/image/upload/qwsdfghjk/qwsdfghj.jpg",
            "location": "Sumy",
            "birthday": "15-04-2015",
            "sex": "female",
            "comment": "Active dog",
            "price": 1000,
            "owner": "64e0e0bcc4d8d3a91d3aa90c"
          },
          {
            "_id": "64e103c48f5f51dbeffcc9cb",
            "category": "lost-found",
            "title": "A cheerful friend",
            "name": "Point",
            "type": "Cat",
            "avatarURL": "http://res.cloudinary.com/qwsdftyuio/image/upload/qwsdfghjk/qwsdfghj.jpg",
            "location": "Sumy",
            "birthday": "28-08-2022",
            "sex": "female",
            "comment": "Domestic cat",
            "owner": "64e0e0bcc4d8d3a91d3aa90c"
          }
        ]
      },
      "GetByIdNoticeResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Notice's id",
            "example": "64e10d144a3a60fc7905bf79"
          },
          "category": {
            "type": "string",
            "description": "Notice's category",
            "example": "sell"
          },
          "title": {
            "type": "string",
            "description": "Notice's title",
            "example": "Reliable friend"
          },
          "name": {
            "type": "string",
            "description": "Pet's name",
            "example": "Nice ones"
          },
          "type": {
            "type": "string",
            "description": "Pet's type",
            "example": "German Shepherd"
          },
          "avatarURL": {
            "type": "string",
            "description": "Pet's avatar url",
            "example": "http://res.cloudinary.com/qwsdftyuio/image/upload/qwsdfghjk/qwsdfghj.jpg"
          },
          "location": {
            "type": "string",
            "description": "Pet's location",
            "example": "Sumy"
          },
          "birthday": {
            "type": "string",
            "description": "Pet's birthday",
            "example": "15-04-2015"
          },
          "sex": {
            "type": "string",
            "description": "Pet's gender",
            "example": "female"
          },
          "comment": {
            "type": "string",
            "description": "Notice's comment",
            "example": "Active dog"
          },
          "price": {
            "type": "number",
            "description": "Pet's price",
            "example": 1000
          },
          "owner": {
            "type": "string",
            "description": "User's id who created the notice",
            "example": "64e0e0bcc4d8d3a91d3aa90c"
          }
        },
        "example": {
          "_id": "64e10d144a3a60fc7905bf79",
          "category": "sell",
          "title": "Reliable friend",
          "name": "Nice ones",
          "type": "German Shepherd",
          "avatarURL": "http://res.cloudinary.com/qwsdftyuio/image/upload/qwsdfghjk/qwsdfghj.jpg",
          "location": "Sumy",
          "birthday": "15-04-2015",
          "sex": "female",
          "comment": "Active dog",
          "price": 1000,
          "owner": "64e0e0bcc4d8d3a91d3aa90c"
        }
      },
      "GetFavoriteNoticesResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "description": "Notice's id",
              "example": "64e10d144a3a60fc7905bf79"
            },
            "category": {
              "type": "string",
              "description": "Notice's category",
              "example": "sell"
            },
            "title": {
              "type": "string",
              "description": "Notice's title",
              "example": "Reliable friend"
            },
            "name": {
              "type": "string",
              "description": "Pet's name",
              "example": "Nice ones"
            },
            "type": {
              "type": "string",
              "description": "Pet's type",
              "example": "German Shepherd"
            },
            "avatarURL": {
              "type": "string",
              "description": "Pet's avatar url",
              "example": "http://res.cloudinary.com/qwsdftyuio/image/upload/qwsdfghjk/qwsdfghj.jpg"
            },
            "location": {
              "type": "string",
              "description": "Pet's location",
              "example": "Sumy"
            },
            "birthday": {
              "type": "string",
              "description": "Pet's birthday",
              "example": "15-04-2015"
            },
            "sex": {
              "type": "string",
              "description": "Pet's gender",
              "example": "female"
            },
            "comment": {
              "type": "string",
              "description": "Notice's comment",
              "example": "Active dog"
            },
            "price": {
              "type": "number",
              "description": "Pet's price",
              "example": 1000
            },
            "owner": {
              "type": "string",
              "description": "User's id who created the notice",
              "example": "64e0e0bcc4d8d3a91d3aa90c"
            },
            "usersAddToFavorite": {
              "type": "array",
              "description": "Users who added the notice in favorites",
              "example": [
                {
                  "_id": "64e2483e058910c38b98f16d",
                  "name": "Mykola",
                  "email": "user@example.com"
                },
                {
                  "_id": "64e0e0bcc4d8d3a91d3aa90c",
                  "name": "Mykola",
                  "email": "nickkuts888@gmail.com"
                }
              ]
            }
          }
        },
        "example": [
          {
            "_id": "64e103c48f5f51dbeffcc9cb",
            "category": "sell",
            "title": "test",
            "name": "Naisy",
            "dateOfBirth": "15-04-2015",
            "type": "dog",
            "comment": "Active",
            "avatarURL": "http://res.cloudinary.com/qwsdftyuio/image/upload/qwsdfghjk/qwsdfghj.jpg",
            "localion": "Sumy",
            "sex": "girl",
            "price": 1000,
            "owner": "64e0e0bcc4d8d3a91d3aa90c",
            "usersAddToFavorite": [
              {
                "_id": "64e0e0bcc4d8d3a91d3aa90c",
                "name": "Mykola",
                "email": "nickkuts888@gmail.com"
              }
            ]
          },
          {
            "_id": "64e38375235f29c7be1aeb9f",
            "category": "sell",
            "title": "Gold fish",
            "name": "Eva",
            "birthday": "30-12-2012",
            "type": "fish",
            "comment": "lucky fish",
            "avatarURL": "http://res.cloudinary.com/qwsdftyuio/image/upload/qwsdfghjk/qwsdfghj.jpg",
            "location": "Bakhmut",
            "sex": "girl",
            "price": 12,
            "owner": "64e326aca9a1b5e141680962",
            "usersAddToFavorite": [
              {
                "_id": "64e2483e058910c38b98f16d",
                "name": "Mykola",
                "email": "user@example.com"
              },
              {
                "_id": "64e0e0bcc4d8d3a91d3aa90c",
                "name": "Mykola",
                "email": "nickkuts888@gmail.com"
              }
            ]
          }
        ]
      },
      "AddToFavoriteResponse": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "UserId who added the notice to favorites",
            "example": "64e2483e058910c38b98f16d"
          }
        },
        "example": {
          "userId": "64e2483e058910c38b98f16d"
        }
      },
      "GetUserNoticesResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "description": "Notice's id",
              "example": "64e10d144a3a60fc7905bf79"
            },
            "category": {
              "type": "string",
              "description": "Notice's category",
              "example": "sell"
            },
            "title": {
              "type": "string",
              "description": "Notice's title",
              "example": "Reliable friend"
            },
            "name": {
              "type": "string",
              "description": "Pet's name",
              "example": "Nice ones"
            },
            "type": {
              "type": "string",
              "description": "Pet's type",
              "example": "German Shepherd"
            },
            "avatarURL": {
              "type": "string",
              "description": "Pet's avatar url",
              "example": "http://res.cloudinary.com/qwsdftyuio/image/upload/qwsdfghjk/qwsdfghj.jpg"
            },
            "location": {
              "type": "string",
              "description": "Pet's location",
              "example": "Sumy"
            },
            "birthday": {
              "type": "string",
              "description": "Pet's birthday",
              "example": "15-04-2015"
            },
            "sex": {
              "type": "string",
              "description": "Pet's gender",
              "example": "female"
            },
            "comment": {
              "type": "string",
              "description": "Notice's comment",
              "example": "Active dog"
            },
            "price": {
              "type": "number",
              "description": "Pet's price",
              "example": 1000
            },
            "owner": {
              "type": "string",
              "description": "User's id who created the notice",
              "example": "64e0e0bcc4d8d3a91d3aa90c"
            }
          },
          "example": {
            "_id": "52e10d144a3a60fc7905bf79",
            "category": "sell",
            "title": "Reliable friend",
            "name": "Nice ones",
            "type": "German Shepherd",
            "avatarURL": "http://res.cloudinary.com/qwsdftyuio/image/upload/qwsdfghjk/qwsdfghj.jpg",
            "location": "Sumy",
            "birthday": "15-04-2015",
            "sex": "female",
            "comment": "Active dog",
            "price": 1000,
            "owner": "64e0e0bcc4d8d3a91d3aa90c"
          }
        }
      },
      "RemoveFromFavoriteResponse": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "UserId who removed the notice from favorites",
            "example": "64e2483e058910c38b98f16d"
          }
        },
        "example": {
          "userId": "64e2483e058910c38b98f16d"
        }
      },
      "AddNoticenRequest": {
        "type": "object",
        "required": [
          "category",
          "title",
          "name",
          "type",
          "location",
          "birthday",
          "sex",
          "comment",
          "price"
        ],
        "properties": {
          "category": {
            "type": "string",
            "description": "Notice's category",
            "example": "sell"
          },
          "title": {
            "type": "string",
            "description": "Notice's title",
            "example": "Reliable friend"
          },
          "name": {
            "type": "string",
            "description": "Pet's name",
            "example": "Nice ones"
          },
          "type": {
            "type": "string",
            "description": "Pet's type",
            "example": "German Shepherd"
          },
          "location": {
            "type": "string",
            "description": "Pet's location",
            "example": "Sumy"
          },
          "birthday": {
            "type": "string",
            "description": "Pet's birthday",
            "example": "15-04-2015"
          },
          "sex": {
            "type": "string",
            "description": "Pet's gender",
            "example": "female"
          },
          "comment": {
            "type": "string",
            "description": "Notice's comment",
            "example": "Active dog"
          },
          "price": {
            "type": "number",
            "description": "Pet's price",
            "example": 1000
          }
        },
        "example": {
          "category": "sell",
          "title": "Reliable friend",
          "name": "Nice ones",
          "type": "German Shepherd",
          "location": "Sumy",
          "birthday": "15-04-2015",
          "sex": "female",
          "comment": "Active dog",
          "price": 1000
        }
      },
      "UserAndPets": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "description": "User's id",
                "example": "64e10d144a3a60fc7905bf79"
              },
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "Zhenya"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "example": "user@example.com"
              },
              "avatarURL": {
                "type": "string",
                "description": "User's avatar url",
                "example": "http://res.cloudinary.com/qwsdftyuio/image/upload/qwsdfghjk/qwsdfghj.jpg"
              },
              "birthday": {
                "type": "string",
                "description": "User's birthday",
                "example": "01.01.1999"
              },
              "city": {
                "type": "string",
                "description": "User's location",
                "example": "Sumy"
              },
              "phone": {
                "type": "string",
                "description": "User's pgone",
                "example": "+380999999999"
              }
            }
          },
          "userPets": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "description": "Pet's id",
                  "example": "64e327b50a4bcf729aa206d1"
                },
                "name": {
                  "type": "string",
                  "description": "Pet's name",
                  "example": "Spike"
                },
                "dateOfBirth": {
                  "type": "string",
                  "description": "Pet's birthday",
                  "example": "02-10-2021"
                },
                "type": {
                  "type": "string",
                  "description": "Pet's type",
                  "example": "boy"
                },
                "comments": {
                  "type": "string",
                  "description": "Some comments about pet",
                  "example": "Beautiful and clever girl"
                },
                "avatarPet": {
                  "type": "string",
                  "description": "Pet's avatar url",
                  "example": "http://res.cloudinary.com/qwsdftyuio/image/upload/qwsdfghjk/qwsdfghj.jpg"
                },
                "owner": {
                  "type": "string",
                  "description": "Owner's id",
                  "example": "64e10d144a3a60fc7905bf79"
                }
              }
            }
          }
        },
        "example": [
          {
            "_id": "64e10d144a3a60fc7905bf79",
            "category": "sell",
            "title": "Reliable friend",
            "name": "Nice ones",
            "type": "German Shepherd",
            "avatarURL": "http://res.cloudinary.com/qwsdftyuio/image/upload/qwsdfghjk/qwsdfghj.jpg",
            "location": "Sumy",
            "birthday": "15-04-2015",
            "sex": "female",
            "comment": "Active dog",
            "price": 1000,
            "owner": "64e0e0bcc4d8d3a91d3aa90c"
          },
          {
            "_id": "64e103c48f5f51dbeffcc9cb",
            "category": "lost-found",
            "title": "A cheerful friend",
            "name": "Point",
            "type": "Cat",
            "avatarURL": "http://res.cloudinary.com/qwsdftyuio/image/upload/qwsdfghjk/qwsdfghj.jpg",
            "location": "Sumy",
            "birthday": "28-08-2022",
            "sex": "female",
            "comment": "Domestic cat",
            "owner": "64e0e0bcc4d8d3a91d3aa90c"
          }
        ]
      },
      "DeleteUserNoticesResponse": {
        "type": "object",
        "properties": {
          "message": "Delete success"
        },
        "example": {
          "message": "Delete success"
        }
      }
    }
  },

  "securitySchemes": {
    "Bearer": {
      "type": "http",
      "scheme": "bearer",
      "bearerFormat": "JWT"
    }
  }
}
